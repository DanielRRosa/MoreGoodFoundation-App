// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider   = "prisma-client-js"
  engineType = "library"
}

model User {
  id            String      @id @default(uuid()) @map("_id")
  provider      String?
  email         String      @unique
  emailVerified Boolean?
  image         String?
  username      String?     @unique
  firstName     String?
  lastName      String?
  fullName      String?
  createdAt     DateTime    @default(now())
  role          Role        @default(member)
  Project       Project?    @relation(fields: [projectId], references: [id])
  projectId     String?
  Account       Account[]
  timedTask     timedTask[]
  Team          Team?       @relation(fields: [teamId], references: [id])
  teamId        String?
}

enum Role {
  member
  supervisor
  admin
  master
}

model Account {
  id                String  @id @default(uuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Team {
  id       String    @id @default(uuid()) @map("_id")
  name     String
  users    User[]
  projects Project[]
}

model Project {
  id        String      @id @default(uuid()) @map("_id")
  name      String
  users     User[]
  timedTask timedTask[]
  Team      Team        @relation(fields: [teamId], references: [id])
  teamId    String
}

model timedTask {
  id        String    @id @default(uuid()) @map("_id")
  name      String
  project   Project?  @relation(fields: [projectId], references: [id])
  user      User?     @relation(fields: [userId], references: [id])
  startTime DateTime
  stopTime  DateTime?
  userId    String
  projectId String
}
